# declare our custom scalars
scalar GraphQLDateTime

# **CommandEvent** the base interface for all command events.
interface CommandEvent {
    # The command event id
    id: ID!
    # The timestamp of this command event
    created: GraphQLDateTime!
}

# **BeanCommandEvent** the base interface for all command events.
interface BeanCommandEvent {
    # The number of beans addded
    numBeansAdded: Int!
}

# "Command Events" ... strictly recordings of actions that have occurred.
# Verbs in the past tense.

# **BeansSupplied**: the command event that signifies the beginning of an order.
type BeansSupplied implements CommandEvent & BeanCommandEvent {
    # The command event id
    id: ID!
    # The timestamp of this command event
    created: GraphQLDateTime!
    # The number of beans addded
    numBeansAdded: Int!
}


type Query {
    # Query to retrieve available beans
    availableBeans: Int!
}

type Mutation {
    # Action for supplying beans. An **BeanSupplied** command event is returned.
    supplyBeans(
    # the customerId placing this order
    numBeans: Int!) : BeansSupplied!
}
